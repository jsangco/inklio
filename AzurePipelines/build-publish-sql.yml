# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - dev
  paths:
    include:
      - 'Services/Inklio.Sql'

variables:
- name: configuration
  value: Release
- group: inklio-vars

pool:
  vmImage: ubuntu-latest

steps:

## Build and Deploy SQL changes
- script: |
    dotnet tool install -g microsoft.sqlpackage
  displayName: "dotnet tool install -g microsoft.sqlpackage"

- script: |
    cd ./Services/Inklio.Sql
    dotnet build ./Inklio.Sql.sqlproj /p:NetCoreBuild=true
  displayName: "dotnet build ./Inklio.Sql.sqlproj /p:NetCoreBuild=true"

- script: |
    cd ./Services/Inklio.Sql
    sqlpackage /Action:Publish /SourceFile:"./bin/Release/Inklio.Sql.dacpac" /TargetConnectionString:"$(sqlConnectionString)"
  displayName: "sqlpackage publish"

- task: ado-discord-webhook@2
  displayName: 'Discord Webhook Failed'
  condition: failed()
  inputs:
    webhookId: '$(discordWebhookId)'
    webhookKey: '$(discordWebhookKey)'
    content: '<@&1161435316922634240> Build Failed!'
    embeds: |
      [
        {
          "type": "rich",
          "title": "$(Build.DefinitionName) ($(Build.BuildNumber))",
          "description": "Build failed!",
          "color": 0xff0000,
          "fields": [
            {
              "name": "Build.RequestedFor",
              "value": "$(Build.RequestedFor)",
              "inline": true
            },
            {
              "name": "Build.Reason",
              "value": "$(Build.Reason)",
              "inline": true
            }
          ],
          "url": "$(System.CollectionUri)/$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=logs"
        }
      ]